---

name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ github.token }}
          level: warning
          reporter: github-pr-review
          filter_mode: file
  test:
    runs-on: ubuntu-latest
    outputs:
      coverage_id: ${{ steps.coverage_id.outputs.value }}
    services:
      db:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    steps:
      - name: setup DSNs
        run: |
          echo "DB_DSN=root@tcp(127.0.0.1:3306)/"            >> "$GITHUB_ENV"
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18.x'
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-
      - run: go mod download
      - uses: aereal/waitmysql/setup@v1.1.0
      - name: wait for MySQL
        # 代表してcommon DBのみ待つ
        run: waitmysql -dsn "$DB_DSN" -init-wait 1s -max-attempts 10 -max-delay 5s
      - name: test
        run: go test -v -race -coverprofile=coverage.out ./...
      - id: coverage_id
        env:
          _value: go-coverage-${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          echo "::set-output name=value::${_value}"
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.coverage_id.outputs.value }}
          path: ./coverage.out
          if-no-files-found: error
  report-coverage:
    permissions:
      actions: read # for GET /repos/:owner/:name/actions/runs/:run_id/jobs
      contents: read
      pull-requests: write # for POST /repos/:owner/:repo/issues/:issue_number/comments
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.test.outputs.coverage_id }}
      - name: report coverage
        uses: k1LoW/octocov-action@v0
